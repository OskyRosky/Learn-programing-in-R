dplyr::rename(
Ejecutado = Proyeccion
)
Gastos_mensual <- rbind.data.frame(Gasto.1,Gastos.2)
Gastos_pronosticado <- Gastos_mensual %>%
dplyr::summarise ('Gasto_estimado' = sum(`Ejecutado`, na.rm = TRUE))
Gastos_pronosticado <- round(Gastos_pronosticado,1)
# b.2 % de ejecución 2020
ind7 <- round(Gastos_pronosticado/ind1*100,1)
ind7 <- ind7 %>%
dplyr::rename(
"%_Ejecucion_estimado"  = "Gasto_estimado"
)
#
# b.3 Var % de la ejecución actual2020
ind8 <- round((Gastos_pronosticado/ind3-1)*100,1)
ind8 <- ind8 %>%
dplyr::rename(
"%_Variacion_anual"  = "Gasto_estimado"
)
# La fecha de hoy
Fecha <- Sys.Date()
Bitacora_actualizada <- cbind.data.frame(Fecha,round(ind1,1),ind2,ind4,ind3,ind5,Gastos_pronosticado,ind7,ind8)
Bitacora_actualizada  <- data.frame(Bitacora_actualizada )
names(Bitacora_actualizada)
Bitacora_actualizada <- Bitacora_actualizada %>%
dplyr::rename(
`Presupuestado`=`Presupuestado a la fecha`,
)
names(Bitacora_actualizada)
Bitacora_actualizada <- cbind.data.frame(Fecha,round(ind1,1),ind2,ind4,ind3,ind5,Gastos_pronosticado,ind7,ind8)
Bitacora_actualizada  <- as.data.frame(Bitacora_actualizada )
names(Bitacora_actualizada)
Bitacora_actualizada <- Bitacora_actualizada %>%
dplyr::rename(
`Presupuestado`=`Presupuestado a la fecha`,
)
names(Bitacora_actualizada)
Bitacora_actualizada
tail(Bitacora_actualizada)
cbind(names(Bitacora_base),names(Bitacora_actualizada), names(Bitacora_base)==names(Bitacora_actualizada))
names(ind4)
indicador_4 <- indicador_4 %>%
dplyr::rename(
`%_Ejecucion`=`Ejecutado a la fecha`
)
indicador_4 <-  round((indicador_2/indicador_1)*100,1)
indicador_4 <- indicador_4 %>%
dplyr::rename(
`%_Ejecucion`=`Ejecutado a la fecha`
)
indicador_5 <-  round((indicador_2/indicador_3-1)*100,1)
indicador_6 <-  mutate(indicador_5,
valoracion = case_when(
`Ejecutado a la fecha` <= RF_GC ~ "SI",
`Ejecutado a la fecha` >  RF_GC  ~"NO"
)
)
indicador_6 <- indicador_6  %>%
select(valoracion)
tabla_5 <- Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
filter(`CE1_cod`== Gastos.corrientes) %>%
dplyr::group_by(Año, mes.cod, mes) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`G-Devengado`, na.rm = TRUE)/1000000),1)  %>%
filter(Ejecutado> 100)
########################################################################
######                      Pronóstico                         #########
########################################################################
tabla_6 <-  Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
filter(`CE1_cod`== Gastos.corrientes) %>%
dplyr::group_by(Año, mes.cod, mes) %>%
arrange(Año,mes.cod) %>%
dplyr::summarise ("Ejecutado"  = sum(`G-Devengado`, na.rm = TRUE)) %>%
filter(Ejecutado> 100)
tabla_7 <- Gastos_Mensuales %>%
filter(Año == Año_actual) %>%
filter(`CE1_cod`== Gastos.corrientes) %>%
dplyr::group_by(mes.cod) %>%
dplyr::summarise ("Ejecutado"  = sum(`G-Devengado`, na.rm = TRUE)/Millones) %>%
arrange(mes.cod) %>%
filter(Ejecutado> 100) %>%
select(Ejecutado)
tabla_8 <-  Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
filter(`CE1_cod`== Gastos.corrientes) %>%
dplyr::group_by(`Título`, Año, mes.cod, mes) %>%
dplyr::summarise ("Ejecutado"  = sum(`G-Devengado`, na.rm = TRUE))  %>%
filter(Ejecutado> 100)
tabla_9 <- Gastos_Mensuales %>%
dplyr::filter(Año == Año_actual) %>%
dplyr::filter(`CE1_cod`== Gastos.corrientes) %>%
dplyr::group_by(`Título`,mes,mes.cod) %>%
dplyr::summarise ("Ejecutado"  = sum(`G-Devengado`, na.rm = TRUE)/Millones) %>%
dplyr::arrange(mes.cod) %>%
dplyr::filter(Ejecutado> 100) %>%
dplyr::select(Ejecutado)
########################################################################
########################################################################
######                      Clasificador                       #########
########################################################################
########################################################################
##################################
#            General             #
##################################
#################
#      COG      #
#################
# Anual #
tabla.10.1 <- Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(Año, `Partida`) %>%
dplyr::summarise ("Ejecutado"  =   round(sum(`Devengado`, na.rm = TRUE)/Millones),1)        %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
)
# Mensual #
tabla.10.2 <-  Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(Año, mes, mes.cod, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`G-Devengado`, na.rm = TRUE)/Millones),1)      %>%
dplyr:: filter(Ejecutado>0) %>%
dplyr::arrange(Año, mes.cod)  %>%
dplyr::select(Año, mes,Partida,Ejecutado)  %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
###################
#      ECO.2      #
###################
# Anual #
tabla.11.1 <- Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(Año, `CLA ECO 2`) %>%
dplyr::summarise ("Ejecutado"  =  round(sum(`Devengado`, na.rm = TRUE)/Millones),1)        %>%
pivot_wider(
names_from = `CLA ECO 2`,
values_from = Ejecutado
)
# Mensual #
tabla.11.2 <-  Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(Año, mes, mes.cod, `CE2`) %>%
dplyr::summarise ("Ejecutado"  = round( sum(`G-Devengado`, na.rm = TRUE)/Millones),1) %>%
dplyr:: filter(Ejecutado>0) %>%
dplyr::arrange(Año, mes.cod)  %>%
dplyr::select(Año, mes,`CE2`,Ejecutado)  %>%
pivot_wider(
names_from = `CE2`,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
######################
#     TOTAL COG      #
######################
tabla.10.1.F <-   Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`CLA ECO 1`, Año, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`Devengado`, na.rm = TRUE)/Millones),1)   %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
)
######################
#   Mensual COG   #
######################
tabla.10.2.F <-   Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(CE1, Año, mes, mes.cod, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`G-Devengado`, na.rm = TRUE)/Millones),1)   %>%
dplyr::arrange(CE1, Año, mes.cod)
tabla.10.2.F <- data.frame(tabla.10.2.F)  %>%
dplyr::select(CE1, Año, mes,Partida,Ejecutado)
tabla.10.2.F <- tabla.10.2.F %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
########################
#      TOTAL ECO.2     #
########################
tabla.11.1.F.A <-   Gastos_acumulados %>%
dplyr::filter(Año >= Años_analisis) %>%
dplyr::group_by(`CLA ECO 1`,Año, `CLA ECO 2`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`Devengado`, na.rm = TRUE)/Millones),1) %>%
dplyr::select(`CLA ECO 1`,Año,`CLA ECO 2`,Ejecutado)
names(tabla.11.1.F.A)
tabla.11.1.F.A <-  tabla.11.1.F.A  %>%
pivot_wider(
names_from = `CLA ECO 2`,
values_from = Ejecutado
)
######################
#    Mensual ECO.2   #
######################
tabla.11.1.F.M <-   Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(CE1, Año, mes, mes.cod, CE2) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`G-Devengado`, na.rm = TRUE)/Millones),1)    %>%
dplyr::arrange(CE1, Año, mes.cod)
tabla.11.1.F.M <- data.frame(tabla.11.1.F.M)  %>%
dplyr::select(CE1, Año, mes,CE2,Ejecutado)
tabla.11.1.F.M <- tabla.11.1.F.M %>%
pivot_wider(
names_from = CE2,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
##################################
#          Por título            #
##################################
#####################
# Acumulado   COG   #
#####################
tabla.12.1.COG.A <-  Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`Título`,Año, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`Devengado`, na.rm = TRUE)/Millones ,1) ) %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
)
#####################
#   Mensual   COG   #
#####################
tabla.12.1.COG.M <- Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`Título`, Año, mes, mes.cod, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round( sum(`G-Devengado`, na.rm = TRUE)/Millones) ,1) %>%
dplyr::arrange(`Título`, Año, mes.cod)
tabla.12.1.COG.M <- data.frame(tabla.12.1.COG.M)  %>%
dplyr::select(`Título`, Año, mes,Partida,Ejecutado)
tabla.12.1.COG.M <- tabla.12.1.COG.M %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
#######################
#  Acumulado   ECO.2  #
#######################
tabla.12.1.ECO2.A <-  Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`Título`,Año, `CLA ECO 2`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`Devengado`, na.rm = TRUE)/Millones) ,1) %>%
pivot_wider(
names_from = `CLA ECO 2`,
values_from = Ejecutado
)
#####################
#   Total   ECO.2   #
#####################
tabla.12.1.ECO2.M <-  Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`Título`, Año, mes, mes.cod, CE2) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`G-Devengado`, na.rm = TRUE)/Millones), 1) %>%
dplyr::arrange(`Título`, Año, mes.cod)
tabla.12.1.ECO2.M <- data.frame(tabla.12.1.ECO2.M)  %>%
dplyr::select(`Título`, Año, mes,CE2,Ejecutado)
tabla.12.1.ECO2.M <- tabla.12.1.ECO2.M %>%
pivot_wider(
names_from = CE2,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
##########################
#       COG - Anual      #
##########################
tabla.12.1.F.A <- Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`CLA ECO 1`,`Título`,Año, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`Devengado`, na.rm = TRUE)/Millones ,1) ) %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
)
######################
#     Mensual COG    #
######################
tabla.12.1.F.M <-   Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(CE1,`Título`, Año, mes, mes.cod, `Partida`) %>%
dplyr::summarise ("Ejecutado"  = round( sum(`G-Devengado`, na.rm = TRUE)/Millones) ,1) %>%
dplyr::arrange(CE1,`Título`, Año, mes.cod)
tabla.12.1.F.M <- data.frame(tabla.12.1.F.M)  %>%
dplyr::select(CE1,`Título`, Año, mes,Partida,Ejecutado)
tabla.12.1.F.M <- tabla.12.1.F.M %>%
pivot_wider(
names_from = Partida,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
########################
#      TOTAL ECO.2     #
########################
tabla.13.1.F.A <- Gastos_acumulados %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(`CLA ECO 1`,`Título`,Año, `CLA ECO 2`) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`Devengado`, na.rm = TRUE)/Millones) ,1) %>%
pivot_wider(
names_from = `CLA ECO 2`,
values_from = Ejecutado
)
######################
#    Mensual ECO.2   #
######################
tabla.13.1.F.M <-   Gastos_Mensuales %>%
filter(Año >= Años_analisis) %>%
dplyr::group_by(CE1,`Título`, Año, mes, mes.cod, CE2) %>%
dplyr::summarise ("Ejecutado"  = round(sum(`G-Devengado`, na.rm = TRUE)/Millones), 1) %>%
dplyr::arrange(CE1,`Título`, Año, mes.cod)
tabla.13.1.F.M <- data.frame(tabla.13.1.F.M)  %>%
dplyr::select(CE1,`Título`, Año, mes,CE2,Ejecutado)
tabla.13.1.F.M <- tabla.13.1.F.M %>%
pivot_wider(
names_from = CE2,
values_from = Ejecutado
) %>%
mutate(
Fecha = paste(Año,mes,sep ="-")
)
################################################################################################################################
############################################################# Cuidado con la bitácora ##########################################
################################################################################################################################
###################################################################
###################################################################
#                         Bitácora                                #
###################################################################
###################################################################
################
#  Directorio  #
################
setwd("C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/Insumos/Bitacora RF")
#################################
#################################
#   Importación  bitacora base  #
#################################
#################################
Bitacora_base <- suppressWarnings(read_excel("Bitacora_base.xlsx"))
#####################################################################
#                 Actualizacion  de la Bitacora                     #
#####################################################################
# a.1 Gasto inicial 2020
ind1 <- indicador_1
ind1 <- round(ind1/Millones,1)
# a.2 Ejecución a la fecha
ind2 <- indicador_2
ind2 <- round(ind2/Millones,1)
# a.3 % de ejecución
ind4 <- indicador_4
ind4 <- round(ind4,1)
ind3 <- round(ind3/Millones,1)
ind3 <- indicador_3
ind3 <- round(ind3/Millones,1)
ind5 <- indicador_5 %>%
dplyr::rename(
'Variacion'='Ejecutado a la fecha'
)
Egresos_GC_GC_mensual_anual <-  tabla_6
serie1 <- ts(Egresos_GC_GC_mensual_anual$Ejecutado, frequency=12, start=c(2007,1))
modelo <- Arima(serie1, order=c(1,1,1), seasonal=c(0,1,1))
Egresos_GC_GC_mensual_anual <-  tabla_6
serie1 <- ts(Egresos_GC_GC_mensual_anual$Ejecutado, frequency=12, start=c(2007,1))
modelo <- Arima(serie1, order=c(1,1,1), seasonal=c(0,1,1))
x1 <- forecast(modelo, h = Faltante_mes, level = 95)
pronosticos <- x1 %>%
as.data.frame() %>%
dplyr::rename(
Proyeccion =`Point Forecast`,
`Limite inferior` =`Lo 95`,
`Limite superior` =`Hi 95`
) %>% mutate(
Proyeccion = round(Proyeccion/Millones,1),
`Limite inferior` = round(`Limite inferior`/Millones,1),
`Limite superior` = round(`Limite superior`/Millones,1)
)
Gasto.1 <- tabla_7
Gasto.1 <- as.data.frame(Gasto.1)
Gastos.2 <- pronosticos %>%
select(Proyeccion) %>%
dplyr::rename(
Ejecutado = Proyeccion
)
Gastos_mensual <- rbind.data.frame(Gasto.1,Gastos.2)
Gastos_pronosticado <- Gastos_mensual %>%
dplyr::summarise ('Gasto_estimado' = sum(`Ejecutado`, na.rm = TRUE))
Gastos_pronosticado <- round(Gastos_pronosticado,1)
# b.2 % de ejecución 2020
ind7 <- round(Gastos_pronosticado/ind1*100,1)
ind7 <- ind7 %>%
dplyr::rename(
"%_Ejecucion_estimado"  = "Gasto_estimado"
)
#
# b.3 Var % de la ejecución actual2020
ind8 <- round((Gastos_pronosticado/ind3-1)*100,1)
ind8 <- ind8 %>%
dplyr::rename(
"%_Variacion_anual"  = "Gasto_estimado"
)
# La fecha de hoy
Fecha <- Sys.Date()
#######################################
# Unión de los diferentes indicadores #
#######################################
Bitacora_actualizada <- cbind.data.frame(Fecha,round(ind1,1),ind2,ind4,ind3,ind5,Gastos_pronosticado,ind7,ind8)
Bitacora_actualizada  <- as.data.frame(Bitacora_actualizada )
names(Bitacora_actualizada)
cbind
cbind(names(Bitacora_base),names(Bitacora_actualizada), names(Bitacora_base)==names(Bitacora_actualizada))
Bitacora_actualizada <- Bitacora_actualizada %>%
dplyr::rename(
`Presupuestado`=`Presupuestado a la fecha`,
)
Bitacora_actualizada <- cbind.data.frame(Fecha,round(ind1,1),ind2,ind4,ind3,ind5,Gastos_pronosticado,ind7,ind8)
Bitacora_actualizada  <- as.data.frame(Bitacora_actualizada )
cbind(names(Bitacora_base),names(Bitacora_actualizada), names(Bitacora_base)==names(Bitacora_actualizada))
Bitacora_actualizada <- cbind.data.frame(Fecha,round(ind1,1),ind2,ind4,ind3,ind5,Gastos_pronosticado,ind7,ind8)
Bitacora_actualizada  <- as.data.frame(Bitacora_actualizada )
cbind(names(Bitacora_base),names(Bitacora_actualizada), names(Bitacora_base)==names(Bitacora_actualizada))
Bitacora_actualizada <- Bitacora_actualizada %>%
dplyr::rename(
`Presupuestado`=`Presupuestado a la fecha`,
`Ejecutado` = `Ejecutado a la fecha`,
`Ejecutado_ano_anterior` = `Ejecutado a la fecha anterior`
)
cbind(names(Bitacora_base),names(Bitacora_actualizada), names(Bitacora_base)==names(Bitacora_actualizada))
Bitacora_agregada <- rbind.data.frame (Bitacora_base, Bitacora_actualizada)
Bitacora_agregada <- Bitacora_agregada %>% distinct()
Bitacora_agregada
setwd("C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/Scripts_tablas")
source("C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/Insumos/RF ---- ETL.R", encoding = 'UTF-8')
library(shiny); source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
source("C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/Insumos/RF ---- ETL.R", encoding = 'UTF-8')
source('C:/Users/oscar/Desktop/Regla fiscal/RF --- REVOLUTION/RF_WEB/RF_GC.R')
setwd("C:/Users/oscar/Desktop/R ---Introducción/Tema 2")
library(readxl)
library(readxl)
data <- read_excel("data.xlsx")
View(data)
Sys.time()
library(readr)
data2 <- read_delim("data2.csv", ";", escape_double = FALSE,
trim_ws = TRUE)
library(readr)
library(readxl)
data_excel_ide <- read_excel("C:/Users/oscar/Desktop/R ---Introducción/Tema 2/data.xlsx",
sheet = "data", col_types = c("text",
"date", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text"),
na = "999999", n_max = 100)
library(readxl)
data_excel_ide <- read_excel("C:/Users/oscar/Desktop/R ---Introducción/Tema 2/data.xlsx",
sheet = "data", col_types = c("text",
"date", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text"),
na = "999999", n_max = 100)
setwd("C:/Users/oscar/Desktop/R ---Introducción/Tema 2")
library(readxl)
data_excel_ide <- read_excel("data.xlsx",
sheet = "data", col_types = c("text",
"date", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text"),
na = "999999", n_max = 100)
library(readxl)
goodname <- read_excel("C:/Users/oscar/Desktop/R ---Introducción/Tema 2/data.xlsx")
View(goodname)
library(readxl)
data77 <- read_excel("C:/Users/oscar/Desktop/R ---Introducción/Tema 2/data.xlsx")
View(data77)
library(readxl)
data <- read_excel("C:/Users/oscar/Desktop/R ---Introducción/Tema 2/data.xlsx")
View(data)
library(readxl)
data_excel_ide <- read_excel("data.xlsx",
sheet = "data", col_types = c("text",
"date", "numeric", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"text", "text", "text", "text"),
na = "999999", n_max = 100)
library(readxl)
data2 <- read_excel("C:/Users/oscar/Desktop/Import/data.xlsx")
View(data2)
library(writexl)
library(writexl)
write_xlsx(data, "export1.xlsx")
write_xlsx(data, "export2.csv")
library(magrittr)
suppressWarnings(library(magrittr))
